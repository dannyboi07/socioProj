name: Deployment Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  deployment_job:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#nodeploy') }}
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "s0ci0"
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          healthcheck: "https://s0ci0.herokuapp.com/api/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
      - name: Determining success of Deployment
        if: ${{ success() && !contains(toJson(github.event.commits.*.message), '#nonotif') }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          details: Deployment Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Determining failure of Deployment
        if: ${{ failure() && !contains(toJson(github.event.commits.*.message), '#nonotif') }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: Deployment Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  tag_release_job:
    name: Tagging Release
    if: ${{ github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
    needs: [deployment_job]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Set Git config
        run: git config --global --add safe.directory /github/workspace
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@eca2b69f9e2c24be7decccd0f15fdb1ea5906598
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Determining success of workflow tagging releases
        if: ${{ success() && !contains(toJson(github.event.commits.*.message), '#nonotif') }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          details: Release tagged successfully!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Determining failure of workflow tagging releases
        if: ${{ failure() && !contains(toJson(github.event.commits.*.message), '#nonotif') }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: Release failed to tagged!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}