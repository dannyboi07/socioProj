{"ast":null,"code":"import _slicedToArray from\"/home/runner/work/socioProj/socioProj/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{sendPost}from\"../../reducers/postblogReducer\";import{setStatusNotif}from\"../../reducers/statusNotifReducer\";import MediaCarousel from\"../MediaCarousel/MediaCarousel\";import{PrimBgDiv}from\"../../styledComponents/PrimBgDiv\";import{Button}from\"../../styledComponents/Button\";import\"./createPost.css\";import{StyledInput}from\"../../styledComponents/StyledInput\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreatePost(){var dispatch=useDispatch();var userToken=useSelector(function(state){return state.user.token;});var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),postText=_useState2[0],setPostText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),postImages=_useState4[0],setPostImages=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),postImagesPrev=_useState6[0],setPostImagesPrev=_useState6[1];var tx=useRef(null);useEffect(function(){//tx.current = document.querySelector(\".crt-pst-txt\");\ntx.current.setAttribute(\"style\",\"height:1.685em;overflow-y:hidden;\");tx.current.addEventListener(\"input\",OnInput,false);var txCleanUp=tx.current;return function(){return txCleanUp.removeEventListener(\"input\",OnInput);};},[]);useEffect(function(){if(postImagesPrev){for(var imgUrl in postImagesPrev){URL.revokeObjectURL(imgUrl);}setPostImagesPrev(null);}if(postImages.length>0){//const temp = [];\n// for (const img in Object.values(postImages)) {\n//   console.log(Object.values(postImages));\n//   temp.push(URL.createObjectURL(img));\n// };\n// Object.values(postImages).forEach(img => {\n//   console.log(img);\n// })\nsetPostImagesPrev(Object.values(postImages).map(function(img){return URL.createObjectURL(img);}));}},[postImages]);function OnInput(){this.style.height=\"1.75em\";this.style.height=this.scrollHeight+\"px\";}function handleSubmit(e){e.preventDefault();if(!postText){dispatch(setStatusNotif(\"SET_ERR_NOTIF\",\"Cannot create a post without text\",3));return;}var postContent=new FormData();postContent.append(\"postText\",postText);if(postImages.length>0){Array.from(postImages).forEach(function(postImage){postContent.append(\"photos\",postImage);});}dispatch(sendPost(postContent,userToken));}return/*#__PURE__*/_jsxs(PrimBgDiv,{className:\"crt-pst \".concat(postImagesPrev?\"crt-pst--prev-active\":\"\"),children:[postImagesPrev&&/*#__PURE__*/_jsx(\"div\",{className:\"crt-pst__img-prv-ctn\",children:/*#__PURE__*/_jsx(MediaCarousel,{postId:0,postImages:postImagesPrev,inPrev:true})}),/*#__PURE__*/_jsxs(\"form\",{id:\"new-post-form\",onSubmit:function onSubmit(e){return handleSubmit(e);},encType:\"multipart/form-data\",children:[/*#__PURE__*/_jsx(StyledInput,{className:\"crt-pst-txt\",type:\"text\",name:\"post-text\",onChange:function onChange(e){return setPostText(e.target.value);},value:postText,placeholder:\"What's on your mind?...\",required:true,ref:tx}),/*#__PURE__*/_jsxs(\"label\",{className:\"crt-pst-lbl\",htmlFor:\"upld-pst\",children:[\"Choose photos\",/*#__PURE__*/_jsx(\"input\",{id:\"upld-pst\",type:\"file\",name:\"photos\",accept:\".jpg,.jpeg,.png,.gif\",onChange:function onChange(e){return setPostImages(e.target.files);},multiple:true})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Post\"})]})]});}export default CreatePost;","map":{"version":3,"sources":["/home/runner/work/socioProj/socioProj/src/components/CreatePost/CreatePost.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","sendPost","setStatusNotif","MediaCarousel","PrimBgDiv","Button","StyledInput","CreatePost","dispatch","userToken","state","user","token","postText","setPostText","postImages","setPostImages","postImagesPrev","setPostImagesPrev","tx","current","setAttribute","addEventListener","OnInput","txCleanUp","removeEventListener","imgUrl","URL","revokeObjectURL","length","Object","values","map","img","createObjectURL","style","height","scrollHeight","handleSubmit","e","preventDefault","postContent","FormData","append","Array","from","forEach","postImage","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendPost } from \"../../reducers/postblogReducer\";\nimport { setStatusNotif } from \"../../reducers/statusNotifReducer\";\nimport MediaCarousel from \"../MediaCarousel/MediaCarousel\";\nimport { PrimBgDiv } from \"../../styledComponents/PrimBgDiv\";\nimport { Button } from \"../../styledComponents/Button\";\nimport \"./createPost.css\";\nimport { StyledInput } from \"../../styledComponents/StyledInput\";\n\nfunction CreatePost() {\n\tconst dispatch = useDispatch();\n\tconst userToken = useSelector(state => state.user.token);\n\tconst [postText, setPostText] = useState(\"\");\n\tconst [postImages, setPostImages] = useState([]);\n\tconst [postImagesPrev, setPostImagesPrev] = useState(null);\n\tconst tx = useRef(null);\n\n\tuseEffect(() => {\n\t\t//tx.current = document.querySelector(\".crt-pst-txt\");\n\t\ttx.current.setAttribute(\"style\", \"height:1.685em;overflow-y:hidden;\");\n\t\ttx.current.addEventListener(\"input\", OnInput, false);\n\n\t\tconst txCleanUp = tx.current;\n\n\t\treturn () => txCleanUp.removeEventListener(\"input\", OnInput);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (postImagesPrev) {\n\t\t\tfor (const imgUrl in postImagesPrev) {\n\t\t\t\tURL.revokeObjectURL(imgUrl);\n\t\t\t}\n\t\t\tsetPostImagesPrev(null);\n\t\t}\n\t\tif (postImages.length > 0) {\n\t\t\t//const temp = [];\n\t\t\t// for (const img in Object.values(postImages)) {\n\t\t\t//   console.log(Object.values(postImages));\n\t\t\t//   temp.push(URL.createObjectURL(img));\n\t\t\t// };\n\t\t\t// Object.values(postImages).forEach(img => {\n\t\t\t//   console.log(img);\n\t\t\t// })\n\t\t\tsetPostImagesPrev( Object.values(postImages).map(img => URL.createObjectURL(img)) );\n\t\t}\n\t}, [postImages]);\n\n\tfunction OnInput() {\n\t\tthis.style.height = \"1.75em\";\n\t\tthis.style.height = this.scrollHeight + \"px\";\n\t}\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif ( !postText ) {\n\t\t\tdispatch(setStatusNotif(\"SET_ERR_NOTIF\", \"Cannot create a post without text\", 3));\n\t\t\treturn;\n\t\t}\n\n\t\tconst postContent = new FormData();\n\t\tpostContent.append(\"postText\", postText);\n\n\t\tif (postImages.length > 0) {\n\t\t\tArray.from(postImages).forEach(postImage => {\n\t\t\t\tpostContent.append(\"photos\", postImage);\n\t\t\t});\n\t\t}\n\n\t\tdispatch(sendPost(postContent, userToken));\n\t}\n\n\treturn (\n\t\t<PrimBgDiv className={`crt-pst ${postImagesPrev ? \"crt-pst--prev-active\" : \"\" }`}>\n\n\t\t\t{\n\t\t\t\tpostImagesPrev &&\n        <div className=\"crt-pst__img-prv-ctn\">\n        \t<MediaCarousel\n        \t\tpostId={0}\n        \t\tpostImages={postImagesPrev}\n        \t\tinPrev={ true }\n        \t/>\n        </div>\n\t\t\t}\n\n\t\t\t<form id=\"new-post-form\" onSubmit={(e) => handleSubmit(e)}\n\t\t\t\tencType=\"multipart/form-data\">\n\n\t\t\t\t<StyledInput className=\"crt-pst-txt\" type=\"text\"\n\t\t\t\t\tname=\"post-text\"\n\t\t\t\t\tonChange={(e) => setPostText(e.target.value)}\n\t\t\t\t\tvalue={ postText }\n\t\t\t\t\tplaceholder=\"What's on your mind?...\"\n\t\t\t\t\trequired\n\t\t\t\t\tref={ tx }\n\t\t\t\t/>\n\n\t\t\t\t<label\n\t\t\t\t\tclassName=\"crt-pst-lbl\"\n\t\t\t\t\thtmlFor=\"upld-pst\">\n          Choose photos\n\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"upld-pst\"\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tname=\"photos\"\n\t\t\t\t\t\taccept=\".jpg,.jpeg,.png,.gif\"\n\t\t\t\t\t\tonChange={(e) => setPostImages(e.target.files)}\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\n\t\t\t\t<Button type=\"submit\">\n          Post\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</PrimBgDiv>\n\t);\n}\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}