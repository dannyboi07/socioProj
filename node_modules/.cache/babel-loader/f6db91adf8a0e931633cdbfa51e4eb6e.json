{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{useHistory,useParams,useLocation}from\"react-router-dom\";import{setFSData,removeFSData}from\"../../reducers/fullScreenReducer\";import{getPost}from\"../../services/contentService\";import{setStatusNotif}from\"../../reducers/statusNotifReducer\";import\"./fullscrndisp.css\";import{setFailure}from\"../../reducers/failureReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FullScreenDisp(_ref){var children=_ref.children,displayPost=_ref.displayPost,goback=_ref.goback;var storeHasAllFsData=useSelector(function(state){return state.fullscreenData?true:false;});var ifDisplayingFail=useSelector(function(state){var _state$failure;return((_state$failure=state.failure)===null||_state$failure===void 0?void 0:_state$failure.type)===\"NEW_CHAT\";});var dispatch=useDispatch();var history=useHistory();var params=useParams();var location=useLocation();function handleCloseFullscreen(){if(displayPost||goback)history.goBack();if(ifDisplayingFail)dispatch(setFailure(\"CLEAR\"));dispatch(removeFSData());}function onEscPress(e){if(e.key===\"Escape\"){handleCloseFullscreen();}}useEffect(function(){document.body.style.overflow=\"hidden\";document.addEventListener(\"keydown\",onEscPress);if(!storeHasAllFsData&&displayPost){console.log(\"fsd post\");// history.goBack();\ngetPost(params.postId).then(function(resPost){return dispatch(setFSData(resPost));}).catch(function(err){console.error(err);var newPath=location.pathname.split(\"/\");dispatch(setStatusNotif(\"SET_ERR_NOTIF\",\"Failed to retrieve post or resource doesn't exist\",3));history.replace(\"/\".concat(newPath[1],\"/\").concat(newPath[2]),null);});}return function(){document.body.style=undefined;document.removeEventListener(\"keydown\",onEscPress);};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"pos-abs-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flscrn-post-ctn-bg\",children:[children,/*#__PURE__*/_jsx(\"img\",{className:\"close-post-flscrn\",src:\"/close-icon.svg\",alt:\"Close\",onClick:handleCloseFullscreen})]})});}export default FullScreenDisp;","map":{"version":3,"sources":["/home/runner/work/socioProj/socioProj/src/components/FullScreenDisplay/FullScreenDisp.js"],"names":["React","useEffect","useSelector","useDispatch","useHistory","useParams","useLocation","setFSData","removeFSData","getPost","setStatusNotif","setFailure","FullScreenDisp","children","displayPost","goback","storeHasAllFsData","state","fullscreenData","ifDisplayingFail","failure","type","dispatch","history","params","location","handleCloseFullscreen","goBack","onEscPress","e","key","document","body","style","overflow","addEventListener","console","log","postId","then","resPost","catch","err","error","newPath","pathname","split","replace","undefined","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\nimport { setFSData, removeFSData } from \"../../reducers/fullScreenReducer\";\nimport { getPost } from \"../../services/contentService\";\nimport { setStatusNotif } from \"../../reducers/statusNotifReducer\";\nimport \"./fullscrndisp.css\";\nimport { setFailure } from \"../../reducers/failureReducer\";\n\nfunction FullScreenDisp({ children, displayPost, goback }) {\n\tconst storeHasAllFsData = useSelector(state => state.fullscreenData ? true : false);\n\tconst ifDisplayingFail = useSelector(state => state.failure?.type === \"NEW_CHAT\");\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst params = useParams();\n\tconst location = useLocation();\n\n\tfunction handleCloseFullscreen() {\n\t\tif (displayPost || goback) history.goBack();\n\t\tif (ifDisplayingFail) dispatch(setFailure(\"CLEAR\"));\n\t\tdispatch(removeFSData());\n\t}\n\n\tfunction onEscPress(e) {\n\t\tif (e.key === \"Escape\") {\n\t\t\thandleCloseFullscreen();\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tdocument.body.style.overflow = \"hidden\";\n\t\tdocument.addEventListener(\"keydown\", onEscPress);\n\n\t\tif (!storeHasAllFsData && displayPost) {\n\t\t\tconsole.log(\"fsd post\");\n\t\t\t// history.goBack();\n\t\t\tgetPost(params.postId)\n\t\t\t\t.then(resPost => dispatch(setFSData(resPost)))\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconst newPath = location.pathname.split(\"/\");\n\t\t\t\t\tdispatch(setStatusNotif(\"SET_ERR_NOTIF\", \"Failed to retrieve post or resource doesn't exist\", 3));\n\t\t\t\t\thistory.replace(`/${newPath[1]}/${newPath[2]}`, null);\n\t\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tdocument.body.style = undefined;\n\t\t\tdocument.removeEventListener(\"keydown\", onEscPress);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div className=\"pos-abs-wrapper\">\n\t\t\t<div className=\"flscrn-post-ctn-bg\">\n\t\t\t\t{\n\t\t\t\t\tchildren\n\t\t\t\t}\n\n\t\t\t\t<img className=\"close-post-flscrn\" src=\"/close-icon.svg\" alt=\"Close\" onClick={ handleCloseFullscreen } />\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FullScreenDisp;"]},"metadata":{},"sourceType":"module"}