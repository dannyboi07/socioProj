{"ast":null,"code":"import _asyncToGenerator from\"/home/runner/work/socioProj/socioProj/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/home/runner/work/socioProj/socioProj/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/home/runner/work/socioProj/socioProj/node_modules/@babel/runtime/regenerator/index.js\";import{getNotifs,deleteNotif}from\"../services/notifService\";import{setFailure}from\"./failureReducer\";import{setStatusNotif}from\"./statusNotifReducer\";// const init = [\n//     {\n//         primaryKey: 2,\n//         title: \"Test from FE\",\n//         body: \"Test FE text sdkjs df sdlf jsd fs dfjs jld jsd fsd\",\n//         icon: \"http://localhost:3500/images/profile-pics/profileimg-1645003992638-711595105.jpg\",\n//         url: \"http://localhost:3000/post/42\"\n//     }\n// ]\nexport default function notificationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"INIT_NOTI\":return _toConsumableArray(action.data);case\"ADD_NOTI\":if(state)return[].concat(_toConsumableArray(action.data),_toConsumableArray(state));return _toConsumableArray(action.data);case\"REMOVE_NOTI\":return state.filter(function(notif){return notif.primaryKey!==action.data;});case\"CLR_NOTI\":return null;default:return state;}}function getAllNotifs(token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getNotifs(token);case 3:response=_context.sent;_context.next=11;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.error(_context.t0);dispatch(setFailure(\"NOTIF\",{func:getAllNotifs,param:token}));return _context.abrupt(\"return\");case 11:dispatch({type:\"INIT_NOTI\",data:response});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return function(_x){return _ref.apply(this,arguments);};}();}function addNotif(data){return{type:\"ADD_NOTI\",data:data};}function removeNotif(token,notifId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return deleteNotif(token,notifId);case 3:_context2.next=10;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);dispatch(setStatusNotif(\"SER_ERR_NOTIF\",\"Failed to mark as read\",3));return _context2.abrupt(\"return\");case 10:dispatch({type:\"REMOVE_NOTI\",data:notifId});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();}function clearNotifs(){return{type:\"CLR_NOTI\",data:null};}export{getAllNotifs,addNotif,removeNotif,clearNotifs};","map":{"version":3,"sources":["/home/runner/work/socioProj/socioProj/src/reducers/notificationReducer.js"],"names":["getNotifs","deleteNotif","setFailure","setStatusNotif","notificationReducer","state","action","type","data","filter","notif","primaryKey","getAllNotifs","token","dispatch","response","console","error","func","param","addNotif","removeNotif","notifId","clearNotifs"],"mappings":"4XAAA,OAASA,SAAT,CAAoBC,WAApB,KAAuC,0BAAvC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,cAAT,KAA+B,sBAA/B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAe,SAASC,CAAAA,mBAAT,EAAmD,IAAtBC,CAAAA,KAAsB,2DAAd,IAAc,IAARC,CAAAA,MAAQ,2CACjE,OAAOA,MAAM,CAACC,IAAd,EACA,IAAK,WAAL,CAEC,0BAAYD,MAAM,CAACE,IAAnB,EACD,IAAK,UAAL,CAEC,GAAIH,KAAJ,CAAW,mCAAYC,MAAM,CAACE,IAAnB,qBAA4BH,KAA5B,GACX,0BAAYC,MAAM,CAACE,IAAnB,EACD,IAAK,aAAL,CACC,MAAOH,CAAAA,KAAK,CAACI,MAAN,CAAa,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAN,GAAqBL,MAAM,CAACE,IAAhC,EAAlB,CAAP,CACD,IAAK,UAAL,CAEC,MAAO,KAAP,CACD,QACC,MAAOH,CAAAA,KAAP,CAdD,CAgBA,CAED,QAASO,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC5B,+FAAO,iBAAMC,QAAN,qKAIYd,CAAAA,SAAS,CAACa,KAAD,CAJrB,QAILE,QAJK,8FAMLC,OAAO,CAACC,KAAR,cACAH,QAAQ,CAACZ,UAAU,CAAC,OAAD,CAAU,CAC5BgB,IAAI,CAAEN,YADsB,CAE5BO,KAAK,CAAEN,KAFqB,CAAV,CAAX,CAAR,CAPK,yCAaNC,QAAQ,CAAC,CACRP,IAAI,CAAE,WADE,CAERC,IAAI,CAAEO,QAFE,CAAD,CAAR,CAbM,oEAAP,+DAkBA,CAED,QAASK,CAAAA,QAAT,CAAkBZ,IAAlB,CAAwB,CACvB,MAAO,CACND,IAAI,CAAE,UADA,CAENC,IAAI,CAAJA,IAFM,CAAP,CAIA,CAED,QAASa,CAAAA,WAAT,CAAqBR,KAArB,CAA4BS,OAA5B,CAAqC,CACpC,gGAAO,kBAAMR,QAAN,8JAECb,CAAAA,WAAW,CAACY,KAAD,CAAQS,OAAR,CAFZ,2FAILN,OAAO,CAACC,KAAR,eACAH,QAAQ,CAACX,cAAc,CAAC,eAAD,CAAkB,wBAAlB,CAA4C,CAA5C,CAAf,CAAR,CALK,0CAQNW,QAAQ,CAAC,CACRP,IAAI,CAAE,aADE,CAERC,IAAI,CAAEc,OAFE,CAAD,CAAR,CARM,sEAAP,iEAaA,CAED,QAASC,CAAAA,WAAT,EAAuB,CACtB,MAAO,CACNhB,IAAI,CAAE,UADA,CAENC,IAAI,CAAE,IAFA,CAAP,CAIA,CAED,OAASI,YAAT,CAAuBQ,QAAvB,CAAiCC,WAAjC,CAA8CE,WAA9C","sourcesContent":["import { getNotifs, deleteNotif } from \"../services/notifService\";\nimport { setFailure } from \"./failureReducer\";\nimport { setStatusNotif } from \"./statusNotifReducer\";\n\n// const init = [\n//     {\n//         primaryKey: 2,\n//         title: \"Test from FE\",\n//         body: \"Test FE text sdkjs df sdlf jsd fs dfjs jld jsd fsd\",\n//         icon: \"http://localhost:3500/images/profile-pics/profileimg-1645003992638-711595105.jpg\",\n//         url: \"http://localhost:3000/post/42\"\n//     }\n// ]\n\nexport default function notificationReducer(state = null, action) {\n\tswitch(action.type) {\n\tcase \"INIT_NOTI\":\n\n\t\treturn [ ...action.data ];\n\tcase \"ADD_NOTI\":\n\n\t\tif (state) return [ ...action.data, ...state ];\n\t\treturn [ ...action.data ];\n\tcase \"REMOVE_NOTI\":\n\t\treturn state.filter(notif => notif.primaryKey !== action.data);\n\tcase \"CLR_NOTI\":\n\n\t\treturn null;\n\tdefault:\n\t\treturn state;\n\t}\n}\n\nfunction getAllNotifs(token) {\n\treturn async dispatch => {\n\n\t\tlet response;\n\t\ttry {\n\t\t\tresponse = await getNotifs(token);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tdispatch(setFailure(\"NOTIF\", {\n\t\t\t\tfunc: getAllNotifs,\n\t\t\t\tparam: token\n\t\t\t}));\n\t\t\treturn;\n\t\t}\n\t\tdispatch({\n\t\t\ttype: \"INIT_NOTI\",\n\t\t\tdata: response\n\t\t});\n\t};\n}\n\nfunction addNotif(data) {\n\treturn({\n\t\ttype: \"ADD_NOTI\",\n\t\tdata\n\t});\n}\n\nfunction removeNotif(token, notifId) {\n\treturn async dispatch => {\n\t\ttry {\n\t\t\tawait deleteNotif(token, notifId);\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\t\t\tdispatch(setStatusNotif(\"SER_ERR_NOTIF\", \"Failed to mark as read\", 3));\n\t\t\treturn;\n\t\t}\n\t\tdispatch({\n\t\t\ttype: \"REMOVE_NOTI\",\n\t\t\tdata: notifId\n\t\t});\n\t};\n}\n\nfunction clearNotifs() {\n\treturn({\n\t\ttype: \"CLR_NOTI\",\n\t\tdata: null\n\t});\n}\n\nexport { getAllNotifs, addNotif, removeNotif, clearNotifs };"]},"metadata":{},"sourceType":"module"}